// OpenQASM for the specified 3-Coloring problem instance. R, G, B for vertex v is represented as 3v-2, 3v-1 and 3v, respectively.

include "qelib1.inc";

// Preparing bits
qreg var[10];
qreg conj[21];
qreg anci[19];
creg m[9];

// Putting bits into superpositioned state
h var[1];
h var[2];
h var[3];
h var[4];
h var[5];
h var[6];
h var[7];
h var[8];
h var[9];

// Marking with oracle evaluation
x conj[0];
x conj[1];
x conj[2];
x conj[3];
x conj[4];
x conj[5];
x conj[6];
x conj[7];
x conj[8];
x conj[9];
x conj[10];
x conj[11];
x conj[12];
x conj[13];
x conj[14];
x conj[15];
x conj[16];
x conj[17];
x conj[18];
x conj[19];
x conj[20];
x var[1];
x var[2];
x var[3];
ccx var[1], var[2], anci[0];
ccx var[3], anci[0], conj[0];
ccx var[1], var[2], anci[0];
x var[1];
x var[2];
x var[3];
ccx var[1], var[2], conj[1];
ccx var[1], var[3], conj[2];
ccx var[2], var[3], conj[3];
x var[4];
x var[5];
x var[6];
ccx var[4], var[5], anci[0];
ccx var[6], anci[0], conj[4];
ccx var[4], var[5], anci[0];
x var[4];
x var[5];
x var[6];
ccx var[4], var[5], conj[5];
ccx var[4], var[6], conj[6];
ccx var[5], var[6], conj[7];
x var[7];
x var[8];
x var[9];
ccx var[7], var[8], anci[0];
ccx var[9], anci[0], conj[8];
ccx var[7], var[8], anci[0];
x var[7];
x var[8];
x var[9];
ccx var[7], var[8], conj[9];
ccx var[7], var[9], conj[10];
ccx var[8], var[9], conj[11];
ccx var[1], var[4], conj[12];
ccx var[2], var[5], conj[13];
ccx var[3], var[6], conj[14];
ccx var[1], var[7], conj[15];
ccx var[2], var[8], conj[16];
ccx var[3], var[9], conj[17];
ccx var[4], var[7], conj[18];
ccx var[5], var[8], conj[19];
ccx var[6], var[9], conj[20];
ccx conj[0], conj[1], anci[0];
ccx conj[2], anci[0], anci[1];
ccx conj[3], anci[1], anci[2];
ccx conj[4], anci[2], anci[3];
ccx conj[5], anci[3], anci[4];
ccx conj[6], anci[4], anci[5];
ccx conj[7], anci[5], anci[6];
ccx conj[8], anci[6], anci[7];
ccx conj[9], anci[7], anci[8];
ccx conj[10], anci[8], anci[9];
ccx conj[11], anci[9], anci[10];
ccx conj[12], anci[10], anci[11];
ccx conj[13], anci[11], anci[12];
ccx conj[14], anci[12], anci[13];
ccx conj[15], anci[13], anci[14];
ccx conj[16], anci[14], anci[15];
ccx conj[17], anci[15], anci[16];
ccx conj[18], anci[16], anci[17];
ccx conj[19], anci[17], anci[18];
ccx conj[20], anci[18], var[0];
ccx conj[19], anci[17], anci[18];
ccx conj[18], anci[16], anci[17];
ccx conj[17], anci[15], anci[16];
ccx conj[16], anci[14], anci[15];
ccx conj[15], anci[13], anci[14];
ccx conj[14], anci[12], anci[13];
ccx conj[13], anci[11], anci[12];
ccx conj[12], anci[10], anci[11];
ccx conj[11], anci[9], anci[10];
ccx conj[10], anci[8], anci[9];
ccx conj[9], anci[7], anci[8];
ccx conj[8], anci[6], anci[7];
ccx conj[7], anci[5], anci[6];
ccx conj[6], anci[4], anci[5];
ccx conj[5], anci[3], anci[4];
ccx conj[4], anci[2], anci[3];
ccx conj[3], anci[1], anci[2];
ccx conj[2], anci[0], anci[1];
ccx conj[0], conj[1], anci[0];
ccx var[6], var[9], conj[20];
ccx var[5], var[8], conj[19];
ccx var[4], var[7], conj[18];
ccx var[3], var[9], conj[17];
ccx var[2], var[8], conj[16];
ccx var[1], var[7], conj[15];
ccx var[3], var[6], conj[14];
ccx var[2], var[5], conj[13];
ccx var[1], var[4], conj[12];
ccx var[8], var[9], conj[11];
ccx var[7], var[9], conj[10];
ccx var[7], var[8], conj[9];
x var[7];
x var[8];
x var[9];
ccx var[7], var[8], anci[0];
ccx var[9], anci[0], conj[8];
ccx var[7], var[8], anci[0];
x var[7];
x var[8];
x var[9];
ccx var[5], var[6], conj[7];
ccx var[4], var[6], conj[6];
ccx var[4], var[5], conj[5];
x var[4];
x var[5];
x var[6];
ccx var[4], var[5], anci[0];
ccx var[6], anci[0], conj[4];
ccx var[4], var[5], anci[0];
x var[4];
x var[5];
x var[6];
ccx var[2], var[3], conj[3];
ccx var[1], var[3], conj[2];
ccx var[1], var[2], conj[1];
x var[1];
x var[2];
x var[3];
ccx var[1], var[2], anci[0];
ccx var[3], anci[0], conj[0];
ccx var[1], var[2], anci[0];
x var[1];
x var[2];
x var[3];

// Amplitude amplification
h var[1];
h var[2];
h var[3];
h var[4];
h var[5];
h var[6];
h var[7];
h var[8];
h var[9];
x var[0];
x var[1];
x var[2];
x var[3];
x var[4];
x var[5];
x var[6];
x var[7];
x var[8];
x var[9];
h var[0];
ccx var[1], var[2], anci[0];
ccx var[3], anci[0], anci[1];
ccx var[4], anci[1], anci[2];
ccx var[5], anci[2], anci[3];
ccx var[6], anci[3], anci[4];
ccx var[7], anci[4], anci[5];
ccx var[8], anci[5], anci[6];
ccx var[9], anci[6], var[0];
ccx var[8], anci[5], anci[6];
ccx var[7], anci[4], anci[5];
ccx var[6], anci[3], anci[4];
ccx var[5], anci[2], anci[3];
ccx var[4], anci[1], anci[2];
ccx var[3], anci[0], anci[1];
ccx var[1], var[2], anci[0];
h var[0];
x var[0];
x var[1];
x var[2];
x var[3];
x var[4];
x var[5];
x var[6];
x var[7];
x var[8];
x var[9];
h var[0];
h var[1];
h var[2];
h var[3];
h var[4];
h var[5];
h var[6];
h var[7];
h var[8];
h var[9];

// Measurements
measure var[1] -> m[0];
measure var[2] -> m[1];
measure var[3] -> m[2];
measure var[4] -> m[3];
measure var[5] -> m[4];
measure var[6] -> m[5];
measure var[7] -> m[6];
measure var[8] -> m[7];
measure var[9] -> m[8];
